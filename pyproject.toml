[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "elva"
description = "A suite of local-first TUI realtime collaboration apps based on CRDTs."
readme = "README.md"
requires-python = ">=3.8"
keywords = [
  "real time",
  "real-time",
  "realtime",
  "collaboration",
  "sync",
  "crdt",
  "y-crdt",
  "yjs",
  "yrs",
  "suite",
  "local",
  "local-first",
  "tui",
  "text",
  "terminal"
]
authors = [
  { name = "ELVA Team", email = "elva@mintgruen.tu-berlin.de" }
]
maintainers = [
  { name = "Jakob Zahn", email = "jakob.zahn@mailbox.org" },
]
license = { file = "LICENSE" }
classifiers = [
  "Programming Language :: Python :: 3"
]
dependencies = [
  "websockets",
  "pycrdt>=0.8.6",
  "pycrdt-websocket>=0.12.6",
  "anyio",
  "textual[syntax]",
  "click"
]
dynamic = ["version"]

[project.optional-dependencies]
dev = [
  "pytest",
  "trio",
  "black",
  "build",
  "setuptools-scm",
  "tox",
  "twine",
  "mkdocs",
  "mkdocstrings",
  "textual-dev"
]

# TODO complete url list
#[project.urls]
#Homepage = "https://url.to/homepage"
#Issues = "https://url.to/issues"
#Documentation = "https://url.to/docs"
#Repository = "https://url.to/repo"
#"Bug Tracker" = "https://url.to/bug-tracker"
#Changelog = "https://url.to/changelog"

[project.scripts]
elva = "elva.cli:elva"

[tool.setuptools]
packages = ["elva"]

[tool.setuptools_scm]
version_file = "elva/_version.py"
local_scheme = "no-local-version"
